--- a/contrib/os400/ibmi_ssh_tests.sh	1969-12-31 18:00:00.000000000 -0600
+++ b/contrib/os400/ibmi_ssh_tests.sh	2017-01-10 10:14:33.477583836 -0600
@@ -0,0 +1,418 @@
+#!/usr/bin/env bash
+
+export PASE_USRGRP_LIMITED=N
+export CHROOTDIR=/QOpenSys/chroot
+
+function trace
+{
+    echo "$@"
+}
+
+function fatal
+{
+    echo "$@"
+    exit 1
+}
+
+# IBM i SSH tests
+
+users=(
+    longusrnam
+    chrtusr
+    grp1prim
+    grp1secn
+    grp2prim
+    grp2secn
+)
+
+groups=(
+    group1
+    group2
+    dummy
+)
+
+function script_cleanup
+{
+    for user in "${users[@]}"
+    do
+        if ! system "DLTUSRPRF USRPRF($user) OWNOBJOPT(*DLT)" > tmpout 2>&1
+        then
+            grep -q CPF2204 tmpout || fatal "Couldn't delete user $user"
+        fi
+        rm tmpout
+    done
+
+    for group in "${groups[@]}"
+    do
+        if ! system "DLTUSRPRF USRPRF($group) OWNOBJOPT(*DLT) PGPOPT(*CHGPGP *NONE)" > tmpout 2>&1
+        then
+            grep -q CPF2204 tmpout || fatal "Couldn't delete group $group"
+        fi
+        rm tmpout
+        system "CRTUSRPRF USRPRF($group) PASSWORD(*NONE)" > /dev/null 2>&1 || fatal "Couldn't create group $group"
+    done
+}
+
+function script_setup
+{
+    for group in "${groups[@]}"
+    do
+        system "CRTUSRPRF USRPRF($group) PASSWORD(*NONE)" > /dev/null 2>&1 || fatal "Couldn't create group $group"
+    done
+
+    system "CRTUSRPRF USRPRF(grp1prim) PASSWORD(*none) GRPPRF(group1) SUPGRPPRF(*none)" > /dev/null 2>&1 || fatal "Couldn't create user grp1prim"
+    system "CRTUSRPRF USRPRF(grp1secn) PASSWORD(*none) GRPPRF(dummy) SUPGRPPRF(group1)" > /dev/null 2>&1 || fatal "Couldn't create user grp1secn"
+    system "CRTUSRPRF USRPRF(grp2prim) PASSWORD(*none) GRPPRF(group2) SUPGRPPRF(*none)" > /dev/null 2>&1 || fatal "Couldn't create user grp2prim"
+    system "CRTUSRPRF USRPRF(grp2secn) PASSWORD(*none) GRPPRF(dummy) SUPGRPPRF(group2)" > /dev/null 2>&1 || fatal "Couldn't create user grp2secn"
+
+    system "CRTUSRPRF USRPRF(longusrnam) PASSWORD(*none)" > /dev/null 2>&1 || fatal "Couldn't create user longusrnam"
+    system "CRTUSRPRF USRPRF(chrtusr) PASSWORD(*none)" > /dev/null 2>&1 || fatal "Couldn't create user chrtusr"
+
+    for user in "${users[@]}"
+    do
+        mkdir /home/$user
+        chown $user /home/$user
+    done
+
+    rm -r $CHROOTDIR
+    ./chroot_setup_script.sh chrtusr
+    cp /QOpenSys/usr/bin/true /QOpenSys/chroot/usr/bin
+}
+
+
+if [ ! -e setup_complete ]
+then
+    script_cleanup
+    script_setup
+    touch setup_complete
+fi
+
+SUDO=/QOpenSys/sudo
+if [ "$1" = 'TEST' ]
+then
+    SSHDIR="$PWD/../.."
+    BINDIR=$SSHDIR
+    SBINDIR=$SSHDIR
+else
+    V=`uname -v`
+    R=`uname -r`
+    SC1DIR=/QOpenSys/QIBM/ProdData/SC1
+    case $V$R in
+    54)
+    SSHDIR=$SC1DIR/OpenSSH/openssh-3.5p1
+    ;;
+
+    61)
+    SSHDIR=$SC1DIR/OpenSSH/openssh-3.8.1p1
+    ;;
+
+    71)
+    SSHDIR=$SC1DIR/OpenSSH/openssh-4.7p1
+    ;;
+
+    *)
+    if [ $V$R -lt 72 ]
+    then
+        echo "Unsupported version $V.$R"
+        exit 1
+    fi
+    
+    SSHDIR=$SC1DIR/OpenSSH
+    ;;
+    esac
+    
+    BINDIR=$SSHDIR/bin
+    SBINDIR=$SSHDIR/sbin
+fi
+    
+SSHD=$SBINDIR/sshd
+SSH=$BINDIR/ssh
+SSH_KEYGEN=$BINDIR/ssh-keygen
+TEST_SSHD_LOGFILE=sshd.log
+TEST_SSH_LOGFILE=ssh.log
+PIDFILE=sshd.pid
+PORT=4242
+
+KEY=test_keypair
+
+if [ ! -f $KEY ]
+then
+    $SSH_KEYGEN -q -N '' -f $KEY
+    (
+            printf 'localhost-with-alias,127.0.0.1,::1 '
+            cat $KEY.pub
+    ) > known_hosts
+
+    cp $KEY host.$KEY
+    cat $KEY.pub > authorized_keys
+    chmod 644 authorized_keys
+fi
+
+cat << EOF > sshd_config_base
+    StrictModes             no
+    Port                    $PORT
+    Protocol                2
+    AddressFamily           inet
+    ListenAddress           127.0.0.1
+    #ListenAddress          ::1
+    PidFile                 $PWD/$PIDFILE
+    AuthorizedKeysFile      $PWD/authorized_keys
+    LogLevel                DEBUG3
+    AcceptEnv               _XXX_TEST_*
+    AcceptEnv               _XXX_TEST
+    #Subsystem       sftp   /path/to/sftp
+    UsePrivilegeSeparation  no
+    HostKey                 $PWD/host.$KEY
+    PubkeyAuthentication yes
+EOF
+
+cat << EOF > ssh_config
+Host *
+        Protocol                2
+        Hostname                127.0.0.1
+        HostKeyAlias            localhost-with-alias
+        Port                    $PORT
+        GlobalKnownHostsFile    $PWD/known_hosts
+        UserKnownHostsFile      $PWD/known_hosts
+        PubkeyAuthentication    yes
+        ChallengeResponseAuthentication no
+        HostbasedAuthentication no
+        PasswordAuthentication  no
+        RhostsRSAAuthentication no
+        BatchMode               yes
+        StrictHostKeyChecking   yes
+        LogLevel                DEBUG3
+        IdentityFile            $PWD/$KEY
+EOF
+    
+function start_sshd
+{
+        # start sshd
+        $SUDO ${SSHD} -f $PWD/sshd_config "$@" -t || fatal "sshd_config broken"
+        $SUDO ${SSHD} -f $PWD/sshd_config "$@" -E$TEST_SSHD_LOGFILE
+
+        echo "wait for sshd"
+        i=0;
+        while [ ! -f $PIDFILE -a $i -lt 10 ]; do
+                i=`expr $i + 1`
+                sleep $i
+        done
+
+        test -f $PIDFILE || fatal "no sshd running on port $PORT"
+}
+
+function end_sshd
+{
+    test -f $PIDFILE || fatal "no sshd running on port $PORT"
+    pid=`cat $PIDFILE`
+    kill $pid
+    i=0;
+    while [ -f $PIDFILE -a $i -lt 10 ]; do
+            i=`expr $i + 1`
+            sleep $i
+    done
+    test -f $PIDFILE && \
+        fatal "sshd didn't exit port $PORT pid $pid"
+}
+
+function check_val
+{
+    test "$1" == "$(cat $2)"
+}
+
+# Test 1 - check > 8 character user name
+cp sshd_config_base sshd_config
+start_sshd
+$SSH -q -p $PORT -F ssh_config -E$TEST_SSH_LOGFILE longusrnam@somehost true || trace "test 1 failed"
+end_sshd
+
+# Test 2 - check chroot user
+cp sshd_config_base sshd_config
+start_sshd
+TEST2VAL=$RANDOM
+$SSH -p $PORT -F ssh_config -E$TEST_SSH_LOGFILE chrtusr@somehost "echo $TEST2VAL > test" || trace "test 2 failed"
+check_val $TEST2VAL $CHROOTDIR/home/chrtusr/test ||  trace 'test 2 failed'
+end_sshd
+
+# Test 3 - AllowGroups
+cp sshd_config_base sshd_config
+cat <<EOF >> sshd_config
+AllowGroups group1
+EOF
+
+start_sshd
+$SSH -q -p $PORT -F ssh_config -E$TEST_SSH_LOGFILE grp1prim@somehost true || trace "test 3 failed"
+$SSH -q -p $PORT -F ssh_config -E$TEST_SSH_LOGFILE grp1secn@somehost true || trace "test 3 failed"
+$SSH -q -p $PORT -F ssh_config -E$TEST_SSH_LOGFILE grp2prim@somehost true && trace "test 3 failed"
+$SSH -q -p $PORT -F ssh_config -E$TEST_SSH_LOGFILE grp2secn@somehost true && trace "test 3 failed"
+end_sshd
+
+# Test 4 - DenyGroups
+cp sshd_config_base sshd_config
+cat <<EOF >> sshd_config
+DenyGroups group2
+EOF
+
+start_sshd
+$SSH -q -p $PORT -F ssh_config -E$TEST_SSH_LOGFILE grp1prim@somehost true || trace "test 4 failed"
+$SSH -q -p $PORT -F ssh_config -E$TEST_SSH_LOGFILE grp1secn@somehost true || trace "test 4 failed"
+$SSH -q -p $PORT -F ssh_config -E$TEST_SSH_LOGFILE grp2prim@somehost true && trace "test 4 failed"
+$SSH -q -p $PORT -F ssh_config -E$TEST_SSH_LOGFILE grp2secn@somehost true && trace "test 4 failed"
+end_sshd
+
+# Test 5 - AllowUsers
+cp sshd_config_base sshd_config
+cat <<EOF >> sshd_config
+AllowUsers grp1prim grp1secn
+EOF
+
+start_sshd
+$SSH -q -p $PORT -F ssh_config -E$TEST_SSH_LOGFILE grp1prim@somehost true || trace "test 5 failed"
+$SSH -q -p $PORT -F ssh_config -E$TEST_SSH_LOGFILE grp1secn@somehost true || trace "test 5 failed"
+$SSH -q -p $PORT -F ssh_config -E$TEST_SSH_LOGFILE grp2prim@somehost true && trace "test 5 failed"
+$SSH -q -p $PORT -F ssh_config -E$TEST_SSH_LOGFILE grp2secn@somehost true && trace "test 5 failed"
+end_sshd
+
+# Test 6 - DenyUsers
+cp sshd_config_base sshd_config
+cat <<EOF >> sshd_config
+DenyUsers grp2prim grp2secn
+EOF
+
+start_sshd
+$SSH -q -p $PORT -F ssh_config -E$TEST_SSH_LOGFILE grp1prim@somehost true || trace "test 6 failed"
+$SSH -q -p $PORT -F ssh_config -E$TEST_SSH_LOGFILE grp1secn@somehost true || trace "test 6 failed"
+$SSH -q -p $PORT -F ssh_config -E$TEST_SSH_LOGFILE grp2prim@somehost true && trace "test 6 failed"
+$SSH -q -p $PORT -F ssh_config -E$TEST_SSH_LOGFILE grp2secn@somehost true && trace "test 6 failed"
+end_sshd
+
+# Test 7 - Match Group
+cp sshd_config_base sshd_config
+cat <<EOF >> sshd_config
+Match Group group1
+    AcceptEnv TEST7VAL
+EOF
+
+start_sshd
+export TEST7VAL=$RANDOM
+$SSH -q -p $PORT -F ssh_config -o SendEnv=TEST7VAL -E$TEST_SSH_LOGFILE grp1prim@somehost 'echo "dummy$TEST7VAL" > test' || trace "test 7 failed"
+$SSH -q -p $PORT -F ssh_config -o SendEnv=TEST7VAL -E$TEST_SSH_LOGFILE grp1secn@somehost 'echo "dummy$TEST7VAL" > test' || trace "test 7 failed"
+$SSH -q -p $PORT -F ssh_config -o SendEnv=TEST7VAL -E$TEST_SSH_LOGFILE grp2prim@somehost 'echo "dummy$TEST7VAL" > test' || trace "test 7 failed"
+$SSH -q -p $PORT -F ssh_config -o SendEnv=TEST7VAL -E$TEST_SSH_LOGFILE grp2secn@somehost 'echo "dummy$TEST7VAL" > test' || trace "test 7 failed"
+check_val "dummy$TEST7VAL" ~grp1prim/test ||  trace 'test 7 failed'
+check_val "dummy$TEST7VAL" ~grp1secn/test ||  trace 'test 7 failed'
+check_val "dummy" ~grp2prim/test ||  trace 'test 7 failed'
+check_val "dummy" ~grp2secn/test ||  trace 'test 7 failed'
+
+end_sshd
+
+# Test 8 - Match !Group
+cp sshd_config_base sshd_config
+cat <<EOF >> sshd_config
+Match Group !group2,*
+    AcceptEnv TEST8VAL
+EOF
+
+start_sshd
+export TEST8VAL=$RANDOM
+$SSH -q -p $PORT -F ssh_config -o SendEnv=TEST8VAL -E$TEST_SSH_LOGFILE grp1prim@somehost 'echo "dummy$TEST8VAL" > test' || trace "test 8 failed"
+$SSH -q -p $PORT -F ssh_config -o SendEnv=TEST8VAL -E$TEST_SSH_LOGFILE grp1secn@somehost 'echo "dummy$TEST8VAL" > test' || trace "test 8 failed"
+$SSH -q -p $PORT -F ssh_config -o SendEnv=TEST8VAL -E$TEST_SSH_LOGFILE grp2prim@somehost 'echo "dummy$TEST8VAL" > test' || trace "test 8 failed"
+$SSH -q -p $PORT -F ssh_config -o SendEnv=TEST8VAL -E$TEST_SSH_LOGFILE grp2secn@somehost 'echo "dummy$TEST8VAL" > test' || trace "test 8 failed"
+check_val "dummy$TEST8VAL" ~grp1prim/test ||  trace 'test 8 failed'
+check_val "dummy$TEST8VAL" ~grp1secn/test ||  trace 'test 8 failed'
+check_val "dummy" ~grp2prim/test ||  trace 'test 8 failed'
+check_val "dummy" ~grp2secn/test ||  trace 'test 8 failed'
+
+end_sshd
+
+# Test 9 - Match User
+cp sshd_config_base sshd_config
+cat <<EOF >> sshd_config
+Match User grp1*
+    AcceptEnv TEST9VAL
+EOF
+
+start_sshd
+export TEST9VAL=$RANDOM
+$SSH -q -p $PORT -F ssh_config -o SendEnv=TEST9VAL -E$TEST_SSH_LOGFILE grp1prim@somehost 'echo "dummy$TEST9VAL" > test' || trace "test 9 failed"
+$SSH -q -p $PORT -F ssh_config -o SendEnv=TEST9VAL -E$TEST_SSH_LOGFILE grp1secn@somehost 'echo "dummy$TEST9VAL" > test' || trace "test 9 failed"
+$SSH -q -p $PORT -F ssh_config -o SendEnv=TEST9VAL -E$TEST_SSH_LOGFILE grp2prim@somehost 'echo "dummy$TEST9VAL" > test' || trace "test 9 failed"
+$SSH -q -p $PORT -F ssh_config -o SendEnv=TEST9VAL -E$TEST_SSH_LOGFILE grp2secn@somehost 'echo "dummy$TEST9VAL" > test' || trace "test 9 failed"
+check_val "dummy$TEST9VAL" ~grp1prim/test ||  trace 'test 9 failed'
+check_val "dummy$TEST9VAL" ~grp1secn/test ||  trace 'test 9 failed'
+check_val "dummy" ~grp2prim/test ||  trace 'test 9 failed'
+check_val "dummy" ~grp2secn/test ||  trace 'test 9 failed'
+
+end_sshd
+
+# Test 10 - Match !User
+cp sshd_config_base sshd_config
+cat <<EOF >> sshd_config
+Match User !grp2*,*
+    AcceptEnv TEST10VAL
+EOF
+
+start_sshd
+export TEST10VAL=$RANDOM
+$SSH -q -p $PORT -F ssh_config -o SendEnv=TEST10VAL -E$TEST_SSH_LOGFILE grp1prim@somehost 'echo "dummy$TEST10VAL" > test' || trace "test 10 failed"
+$SSH -q -p $PORT -F ssh_config -o SendEnv=TEST10VAL -E$TEST_SSH_LOGFILE grp1secn@somehost 'echo "dummy$TEST10VAL" > test' || trace "test 10 failed"
+$SSH -q -p $PORT -F ssh_config -o SendEnv=TEST10VAL -E$TEST_SSH_LOGFILE grp2prim@somehost 'echo "dummy$TEST10VAL" > test' || trace "test 10 failed"
+$SSH -q -p $PORT -F ssh_config -o SendEnv=TEST10VAL -E$TEST_SSH_LOGFILE grp2secn@somehost 'echo "dummy$TEST10VAL" > test' || trace "test 10 failed"
+check_val "dummy$TEST10VAL" ~grp1prim/test ||  trace 'test 10 failed'
+check_val "dummy$TEST10VAL" ~grp1secn/test ||  trace 'test 10 failed'
+check_val "dummy" ~grp2prim/test ||  trace 'test 10 failed'
+check_val "dummy" ~grp2secn/test ||  trace 'test 10 failed'
+
+end_sshd
+
+
+
+
+# Test 90 - ibmpaseforishell
+cp sshd_config_base sshd_config
+cat <<EOF >> sshd_config
+ibmpaseforishell $PWD/my_shell
+EOF
+
+TEST90VAL=$RANDOM
+cat <<EOF > my_shell
+#!/bin/sh
+echo $TEST90VAL > $PWD/test90val
+exit 0
+EOF
+chmod +x my_shell
+
+start_sshd
+$SSH -q -p $PORT -F ssh_config -E$TEST_SSH_LOGFILE somehost true || trace "test 90 failed"
+check_val $TEST90VAL test90val ||  trace 'test 90 failed'
+end_sshd
+
+
+# Test 91 - ibmpaseforienv
+cp sshd_config_base sshd_config
+cat <<EOF >> sshd_config
+ibmpaseforienv ASDF=BLAH
+EOF
+
+$SSHD -q -f sshd_config -t || trace "test 91 failed"
+
+
+# Test 92 - ibmpaseforicntry
+cp sshd_config_base sshd_config
+cat <<EOF >> sshd_config
+ibmpaseforicntry US
+EOF
+
+$SSHD -q -f sshd_config -t || trace "test 92 failed"
+
+
+# Test 93 - ibmpaseforilangid
+cp sshd_config_base sshd_config
+cat <<EOF >> sshd_config
+ibmpaseforilangid ENU
+EOF
+
+$SSHD -q -f sshd_config -t || trace "test 93 failed"
+
+script_cleanup
\ No newline at end of file
